//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLHocSinh
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QLHSEntities : DbContext
    {
        public QLHSEntities()
            : base("name=QLHSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Class> Classes { get; set; }
        public virtual DbSet<ClassLevel> ClassLevels { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Point> Points { get; set; }
        public virtual DbSet<RuleAge> RuleAges { get; set; }
        public virtual DbSet<RuleStandardScore> RuleStandardScores { get; set; }
        public virtual DbSet<RuleSubject> RuleSubjects { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int addStudent(string fidstudent, string ffullname, string fbirthday, string fgender, string femail, string fphonenumber, string faddress)
        {
            var fidstudentParameter = fidstudent != null ?
                new ObjectParameter("fidstudent", fidstudent) :
                new ObjectParameter("fidstudent", typeof(string));
    
            var ffullnameParameter = ffullname != null ?
                new ObjectParameter("ffullname", ffullname) :
                new ObjectParameter("ffullname", typeof(string));
    
            var fbirthdayParameter = fbirthday != null ?
                new ObjectParameter("fbirthday", fbirthday) :
                new ObjectParameter("fbirthday", typeof(string));
    
            var fgenderParameter = fgender != null ?
                new ObjectParameter("fgender", fgender) :
                new ObjectParameter("fgender", typeof(string));
    
            var femailParameter = femail != null ?
                new ObjectParameter("femail", femail) :
                new ObjectParameter("femail", typeof(string));
    
            var fphonenumberParameter = fphonenumber != null ?
                new ObjectParameter("fphonenumber", fphonenumber) :
                new ObjectParameter("fphonenumber", typeof(string));
    
            var faddressParameter = faddress != null ?
                new ObjectParameter("faddress", faddress) :
                new ObjectParameter("faddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addStudent", fidstudentParameter, ffullnameParameter, fbirthdayParameter, fgenderParameter, femailParameter, fphonenumberParameter, faddressParameter);
        }
    
        public virtual ObjectResult<checklogin_Result> checklogin(string fusername, string fpassword)
        {
            var fusernameParameter = fusername != null ?
                new ObjectParameter("fusername", fusername) :
                new ObjectParameter("fusername", typeof(string));
    
            var fpasswordParameter = fpassword != null ?
                new ObjectParameter("fpassword", fpassword) :
                new ObjectParameter("fpassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checklogin_Result>("checklogin", fusernameParameter, fpasswordParameter);
        }
    
        public virtual int getClassByLevel(string iDLevel)
        {
            var iDLevelParameter = iDLevel != null ?
                new ObjectParameter("iDLevel", iDLevel) :
                new ObjectParameter("iDLevel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getClassByLevel", iDLevelParameter);
        }
    
        public virtual ObjectResult<GetClasses_Result> GetClasses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClasses_Result>("GetClasses");
        }
    
        public virtual ObjectResult<getClassLevel_Result> getClassLevel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getClassLevel_Result>("getClassLevel");
        }
    
        public virtual ObjectResult<getListSubject_Result> getListSubject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getListSubject_Result>("getListSubject");
        }
    
        public virtual ObjectResult<getStudentByID_Result> getStudentByID(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStudentByID_Result>("getStudentByID", idParameter);
        }
    
        public virtual ObjectResult<getStudentDetail_Result> getStudentDetail(string idname)
        {
            var idnameParameter = idname != null ?
                new ObjectParameter("idname", idname) :
                new ObjectParameter("idname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStudentDetail_Result>("getStudentDetail", idnameParameter);
        }
    
        public virtual int getStudentPoint(string fsubjectid, string fclassid)
        {
            var fsubjectidParameter = fsubjectid != null ?
                new ObjectParameter("fsubjectid", fsubjectid) :
                new ObjectParameter("fsubjectid", typeof(string));
    
            var fclassidParameter = fclassid != null ?
                new ObjectParameter("fclassid", fclassid) :
                new ObjectParameter("fclassid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getStudentPoint", fsubjectidParameter, fclassidParameter);
        }
    
        public virtual ObjectResult<getStudents_Result> getStudents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStudents_Result>("getStudents");
        }
    
        public virtual ObjectResult<getStudentsByClass_Result> getStudentsByClass(string fclass)
        {
            var fclassParameter = fclass != null ?
                new ObjectParameter("fclass", fclass) :
                new ObjectParameter("fclass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStudentsByClass_Result>("getStudentsByClass", fclassParameter);
        }
    
        public virtual ObjectResult<getSubjects_Result> getSubjects()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSubjects_Result>("getSubjects");
        }
    
        public virtual ObjectResult<ReportFolowSubject_Result> ReportFolowSubject(Nullable<int> year, Nullable<int> semester, string subjectID)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var semesterParameter = semester.HasValue ?
                new ObjectParameter("Semester", semester) :
                new ObjectParameter("Semester", typeof(int));
    
            var subjectIDParameter = subjectID != null ?
                new ObjectParameter("SubjectID", subjectID) :
                new ObjectParameter("SubjectID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportFolowSubject_Result>("ReportFolowSubject", yearParameter, semesterParameter, subjectIDParameter);
        }
    
        public virtual ObjectResult<ReportFolowYear_Result> ReportFolowYear(Nullable<int> year, Nullable<int> semester)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var semesterParameter = semester.HasValue ?
                new ObjectParameter("Semester", semester) :
                new ObjectParameter("Semester", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportFolowYear_Result>("ReportFolowYear", yearParameter, semesterParameter);
        }
    
        public virtual int UpdateStudentPoint(string fids, string fp15, string fp45, string fpl)
        {
            var fidsParameter = fids != null ?
                new ObjectParameter("fids", fids) :
                new ObjectParameter("fids", typeof(string));
    
            var fp15Parameter = fp15 != null ?
                new ObjectParameter("fp15", fp15) :
                new ObjectParameter("fp15", typeof(string));
    
            var fp45Parameter = fp45 != null ?
                new ObjectParameter("fp45", fp45) :
                new ObjectParameter("fp45", typeof(string));
    
            var fplParameter = fpl != null ?
                new ObjectParameter("fpl", fpl) :
                new ObjectParameter("fpl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudentPoint", fidsParameter, fp15Parameter, fp45Parameter, fplParameter);
        }
    }
}
